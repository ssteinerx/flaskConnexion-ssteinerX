Swagger generated server
------------------------

### Template:
    ssteinerX -- flaskConnexion-ssteinerX template


#### CONFIG OPTIONS

#####	sortParamsByRequiredFlag
    Sort method arguments to place required parameters before optional parameters. (Default: true)
    Value: {{{sortParamsByRequiredFlag}}}
#
#	ensureUniqueParams
#	    Whether to ensure parameter names are unique in an operation (rename parameters that are not). (Default: true)
#       Value: {{{ensureUniqueParams}}}
#
#	packageName
#	    python package name (convention: snake_case). (Default: swagger_server)
#       Value: {{{packageName}}}
#
#	packageVersion
#	    python package version. (Default: 1.0.0)
#       Value: {{{packageVersion}}}
#
#	controllerPackage
#	    controller package (Default: controllers)
#       Value: {{{controllerPackage}}}
#
#	defaultController
#	    default controller (Default: default_controller)
#       Value: {{{defaultController}}}
#
#	supportPython2
#	    support python2 (Default: false)
#       Value: {{{supportPython2}}}
#
#==============================================================================
{{^supportPython2}}
NOT supporting Python 2
{{/supportPython2}}
{{#supportPython2}}
Supporting Python 2
{{/supportPython2}}

## Overview
This server was generated by the [swagger-codegen](https://github.com/swagger-api/swagger-codegen) project. By using the
[OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki) from a remote server, you can easily generate a server stub.  This
is an example of building a swagger-enabled Flask server.

This example uses the [Connexion](https://github.com/zalando/connexion) library on top of Flask.

To run the server, please execute the following from the root directory:

```
{{#supportPython2}}
pip install -r requirements.txt
python -m {{packageName}}
{{/supportPython2}}
{{^supportPython2}}
pip3 install -r requirements.txt
python3 -m {{packageName}}
{{/supportPython2}}
```

and open your browser to here:

```
http://localhost:{{serverPort}}{{contextPath}}/ui/
```

Your Swagger definition lives here:

```
http://localhost:{{serverPort}}{{contextPath}}/swagger.json
```

To launch the integration tests, use tox:
```
sudo pip install tox
tox
```
